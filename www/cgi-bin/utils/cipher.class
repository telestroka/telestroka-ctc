<?php
/***********************************************
-=Ms Site=-

Автор:    Миропольский Михаил <ms@ensk.ru>
Описание: Класс шифрования
***********************************************/
require_once('convert.class');

class Cipher extends Convert
{
	var $cipherArray = array(
					'~' => '1',
				   	'`' => '2',
					'!' => '3',
					'@' => '4',
					'#' => '5',
					'$' => '6',
					'%' => '7',
					'^' => '8',
					'&' => '9',
					'*' => '10',
					'(' => '11',
					')' => '12',
					'_' => '13',
					'-' => '14',
					'+' => '15',
					'|' => '16',
 					"\\" => '17',
 					'/' => '18',
					'.' => '19',
					',' => '20',
					'?' => '21',
					':' => '22',
					';' => '23',
					"'" => '24',
					'"' => '25',
					' ' => '26',
					'{' => '27',
					'}' => '28',
					'[' => '29',
					']' => '30',
					"\a" => '30',
					"\e" => '30',
					"\f" => '30',
					"\n" => '30',
					"\r" => '30',
					"\t" => '30',
					"\r" => '32',
					'0' => '100',
					'1' => '101',
					'2' => '102',
					'3' => '103',
					'4' => '104',
					'5' => '105',
					'6' => '106',
					'7' => '107',
					'8' => '108',
					'9' => '109',
					'a' => '201',
					'b' => '202',
					'c' => '203',
					'd' => '204',
					'e' => '205',
					'f' => '206',
					'g' => '207',
					'h' => '208',
					'i' => '209',
					'j' => '210',
					'k' => '211',
					'l' => '212',
					'm' => '213',
					'n' => '214',
					'o' => '215',
					'p' => '216',
					'q' => '217',
					'r' => '218',
					's' => '219',
					't' => '220',
					'u' => '221',
					'v' => '222',
					'w' => '223',
					'x' => '224',
					'y' => '225',
					'z' => '226',
					'A' => '301',
					'B' => '302',
					'C' => '303',
					'D' => '304',
					'E' => '305',
					'F' => '306',
					'G' => '307',
					'H' => '308',
					'I' => '309',
					'J' => '310',
					'K' => '311',
					'L' => '312',
					'M' => '313',
					'N' => '314',
					'O' => '315',
					'P' => '316',
					'Q' => '317',
					'R' => '318',
					'S' => '319',
					'T' => '320',
					'U' => '321',
					'V' => '322',
					'W' => '323',
					'X' => '324',
					'Y' => '325',
					'Z' => '326',
					'а' => '401',
					'б' => '402',
					'в' => '403',
					'г' => '404',
					'д' => '405',
					'е' => '406',
					'ё' => '407',
					'ж' => '408',
					'з' => '409',
					'и' => '410',
					'й' => '411',
					'к' => '412',
					'л' => '413',
					'м' => '414',
					'н' => '415',
					'о' => '416',
					'п' => '417',
					'р' => '418',
					'с' => '419',
					'т' => '420',
					'у' => '421',
					'ф' => '422',
					'х' => '423',
					'ц' => '424',
					'ч' => '425',
					'ш' => '426',
					'щ' => '427',
					'ъ' => '428',
					'ы' => '429',
					'ь' => '430',
					'э' => '431',
					'ю' => '432',
					'я' => '433',
					'А' => '501',
					'Б' => '502',
					'В' => '503',
					'Г' => '504',
					'Д' => '505',
					'Е' => '506',
					'Ё' => '507',
					'Ж' => '508',
					'З' => '509',
					'И' => '510',
					'Й' => '511',
					'К' => '512',
					'Л' => '513',
					'М' => '514',
					'Н' => '515',
					'О' => '516',
					'П' => '517',
					'Р' => '518',
					'С' => '519',
					'Т' => '520',
					'У' => '521',
					'Ф' => '522',
					'Х' => '523',
					'Ц' => '524',
					'Ч' => '525',
					'Ш' => '526',
					'Щ' => '527',
					'Ъ' => '528',
					'Ы' => '529',
					'Ь' => '530',
					'Э' => '531',
					'Ю' => '532',
					'Я' => '533'
					);


	function CipherEncode($string)
	{
		//разбиваем исходную строчку в массив
		$string_array = $this->ConvertString2Array($string, 1);

		//генерим ключ
		$codekey = rand(1000, 9000);

		//кодируем в соответствии с таблицей
		foreach ($string_array as $key => $char)
		{
			if ( !isset($this->cipherArray[$char]) ) $char = '?';
			$string_array[$key] = $this->cipherArray[$char] + $codekey;
		}

		//объединяем
		$code = implode("", $string_array);

		//перемешиваем
		$pieces = $this->ConvertString2Array($code, 10);
		foreach ($pieces as $key => $piece_string)
		{
			if ( strlen($piece_string) != 10 ) break;

			$source = $this->ConvertString2Array($piece_string, 1);
			$result[0] = $source[4];
			$result[1] = $source[9];
			$result[2] = $source[5];
			$result[3] = $source[1];
			$result[4] = $source[0];
			$result[5] = $source[7];
			$result[6] = $source[3];
			$result[7] = $source[2];
			$result[8] = $source[6];
			$result[9] = $source[8];

			$pieces[$key] = implode('', $result);
		}
		$code = implode('', $pieces);


		//добавляем ключ
		$code = $codekey . $code;

		return $code;
	}


	function CipherDecode($code)
	{
		$cipherArray = array_flip($this->cipherArray);

		//вытаскиваем ключ
		$codekey = substr($code, 0, 4);

		$string = substr( $code, 4, strlen($code) );

		//перемешиваем обратно
		$pieces = $this->ConvertString2Array($string, 10);
		foreach ($pieces as $key => $piece_string)
		{
			if ( strlen($piece_string) != 10 ) break;

			$result = $this->ConvertString2Array($piece_string, 1);
			$source[0] = $result[4];
			$source[1] = $result[3];
			$source[2] = $result[7];
			$source[3] = $result[6];
			$source[4] = $result[0];
			$source[5] = $result[2];
			$source[6] = $result[8];
			$source[7] = $result[5];
			$source[8] = $result[9];
			$source[9] = $result[1];

			$pieces[$key] = implode('', $source);
		}
		$string = implode('', $pieces);

		//разбиваем кодированую строчку в массив
		$code_array = $this->ConvertString2Array($string, 4);

		//декодируем в соответствии с таблицей
		foreach ($code_array as $key => $code_array_char)
		{
			$temp = $code_array_char - $codekey;
			$code_array[$key] = $cipherArray[$temp];
		}

		//объединяем
		$string = implode("", $code_array);


		return $string;
	}
}
?>